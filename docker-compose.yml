version: '3'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./Dockerfile.development
    ports:
      - "${DOCKER_WEB_PORT}:3000"
    tty: true
    stdin_open: true
    depends_on:
      - mail
      - db
      - redis
    command: ./lib/wait-for-it.sh db:5432 -- ./lib/wait-for-it.sh redis:6379 -- ./lib/wait-for-it.sh mail:1025 -- bin/dev_server
    env_file:
      - ./.env
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://postgres:pass@db:5432/simplebbs_devleopment
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=mail
      - NODE_ENV=development
      - AUTO_DOTENV=false
    volumes:
      - .:/app
      - node_modules:/app/node_modules

  test:
    profiles: ["test"]
    container_name: test
    build:
      context: .
      dockerfile: ./Dockerfile.development
    tty: true
    stdin_open: true
    depends_on:
      - db
    command: ./lib/wait-for-it.sh db:5432 -- ./lib/wait-for-it.sh redis:6379 -- npm test
    environment:
      - DATABASE_URL=postgres://postgres:pass@db:5432/simplebbs_test
      - NODE_ENV=test
    volumes:
      - .:/app
      - node_modules:/app/node_modules

  mail:
    build:
      context: .
      dockerfile: ./Dockerfile.development
    ports:
      - "1025"
      - "${DOCKER_MAILDEV_WEB_PORT}:1080"
    command: npx maildev
    env_file:
      - ./.env
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    
  db:
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: 'pass'
    ports:
      - 6686:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:alpine
    ports:
      - "6379"
    volumes:
      - redis_data:/data

volumes:
  node_modules: {}
  postgres_data: {}
  redis_data: {}